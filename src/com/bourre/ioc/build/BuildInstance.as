/* * Copyright the original author or authors. *  * Licensed under the MOZILLA PUBLIC LICENSE, Version 1.1 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at *  *      http://www.mozilla.org/MPL/MPL-1.1.html *  * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. *//** * @author Francis Bourre * @version 1.0 */import com.bourre.core.HashCodeFactory;import com.bourre.ioc.build.IBuild;import com.bourre.ioc.events.ChannelExpert;import com.bourre.log.PixlibDebug;import com.bourre.log.PixlibStringifier;	class com.bourre.ioc.build.BuildInstance 	implements IBuild {	public function build( type : String, args : Array/*, factory : String, singleton : String, channel : String*/ )	{		var channel : String = arguments[4];		if ( channel.length > 0 ) ChannelExpert.getInstance().registerChannel( ChannelExpert.previewNextKey(), channel );		var o = HashCodeFactory.buildInstance( type, args, arguments[2], arguments[3] );		if ( !o ) PixlibDebug.FATAL( this + ".build(" + type + ") failed." );		return o;	}		/**	 * Returns the string representation of this instance.	 * @return the string representation of this instance	 */	public function toString() : String 	{		return PixlibStringifier.stringify( this );	}}