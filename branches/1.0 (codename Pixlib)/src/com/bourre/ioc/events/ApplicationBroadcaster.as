/* * Copyright the original author or authors. *  * Licensed under the MOZILLA PUBLIC LICENSE, Version 1.1 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at *  *      http://www.mozilla.org/MPL/MPL-1.1.html *  * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @author Francis Bourre * @version 1.0 */import com.bourre.events.ChannelBroadcaster;import com.bourre.events.EventBroadcaster;import com.bourre.ioc.events.PixiocSystemChannel;import com.bourre.log.PixlibStringifier;class com.bourre.ioc.events.ApplicationBroadcaster 	extends ChannelBroadcaster{	private static var _oI : ApplicationBroadcaster;	public static var NO_CHANNEL : String = "__NO_CHANNEL";		/**	 * @return singleton instance of ApplicationBroadcaster	 */	public static function getInstance() : ApplicationBroadcaster 	{		if (!_oI) _oI = new ApplicationBroadcaster();		return _oI;	}		private function ApplicationBroadcaster()	{		super( PixiocSystemChannel.CHANNEL );	}		public function getChannelDispatcher( sChannel : String, owner ) : EventBroadcaster	{		return ( sChannel != ApplicationBroadcaster.NO_CHANNEL ) ? super.getChannelDispatcher( sChannel, owner ) : undefined;	}		/**	 * Returns the string representation of this instance.	 * @return the string representation of this instance	 */	public function toString() : String 	{		return PixlibStringifier.stringify( this );	}}