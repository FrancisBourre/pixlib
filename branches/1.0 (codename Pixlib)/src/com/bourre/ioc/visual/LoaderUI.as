/* * Copyright the original author or authors. *  * Licensed under the MOZILLA PUBLIC LICENSE, Version 1.1 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at *  *      http://www.mozilla.org/MPL/MPL-1.1.html *  * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. *//** * @author Francis Bourre * @version 1.0 */import com.bourre.data.libs.LibEvent;import com.bourre.ioc.loader.ApplicationLoaderEvent;import com.bourre.ioc.loader.IApplicationLoaderListener;import com.bourre.ioc.visual.AbstractMovieClipHelper;import com.bourre.log.PixlibStringifier;	class com.bourre.ioc.visual.LoaderUI 	extends AbstractMovieClipHelper 	implements IApplicationLoaderListener{	private var _sProgressCallBack : String;	private var _sNameCallBack : String;	private var _sTimeoutCallBack : String;	private var _sBuiltCallBack : String;	private var _sInitCallBack : String;		private var _oProgressCallBack;	private var _oNameCallBack;	private var _oTimeoutCallBack;	private var _oBuiltCallBack;	private var _oInitCallBack;		private var _fProgressCallBack : Function;	private var _fNameCallBack : Function;	private var _fTimeoutCallBack : Function;	private var _fBuiltCallBack : Function;	private var _fInitCallBack : Function;		public static var NAME : String = "__LOADER";		public function LoaderUI(	progressCallback : String, 								nameCallback : String, 								timeoutCallback : String,								builtCallback : String,								initCallback : String 		) 	{		super( null );				_sProgressCallBack = progressCallback;		_sNameCallBack = nameCallback;		_sTimeoutCallBack = timeoutCallback;		_sBuiltCallBack = builtCallback;		_sInitCallBack = initCallback;	}		public function onInit() : Void	{		setProgressCallback( _sProgressCallBack );		setNameCallback( _sNameCallBack );		setTimeoutCallback( _sTimeoutCallBack );		setBuiltCallback( _sBuiltCallBack );		setInitCallback( _sInitCallBack );				super.onInit();	}		public function setProgressCallback ( progressCallback : String ) : Void	{		_oProgressCallBack = _evalScope( progressCallback );		_fProgressCallBack = eval( view + "." + progressCallback  );	}		public function setNameCallback ( nameCallback : String ) : Void	{		_oNameCallBack = _evalScope( nameCallback );		_fNameCallBack = eval( view + "." + nameCallback );	}		public function setTimeoutCallback ( timeoutCallback : String ) : Void	{		_oTimeoutCallBack = _evalScope( timeoutCallback );		_fTimeoutCallBack = eval( view + "." + timeoutCallback );	}		public function setBuiltCallback ( builtCallback : String ) : Void	{		_oBuiltCallBack = _evalScope( builtCallback );		_fBuiltCallBack = eval( view + "." + builtCallback );	}		public function setInitCallback ( initCallback : String ) : Void	{		_oInitCallBack = _evalScope( initCallback );		_fInitCallBack = eval( view + "." + initCallback );	}		private function _evalScope( s : String )	{		var a : Array = s.split(".");		a.splice( a.length-1, 1 );		s = a.join(".");		return s.length > 0 ? eval( view + "." + s ) : view;	}		public function onApplicationBuilt( e : ApplicationLoaderEvent ) : Void 	{		_fBuiltCallBack.apply( _oBuiltCallBack, null );	}		public function onApplicationInit( e : ApplicationLoaderEvent ) : Void 	{		_fInitCallBack.apply( _oInitCallBack, null );	}	public function onLoadInit( e : LibEvent ) : Void 	{			}	public function onLoadProgress( e : LibEvent ) : Void 	{		_fProgressCallBack.apply( _oProgressCallBack, [e.getPerCent()] );		_fNameCallBack.apply( _oNameCallBack, [e.getName()] );	}	public function onTimeOut( e : LibEvent ) : Void 	{		_fTimeoutCallBack.apply( _oTimeoutCallBack, null );	}		/**	 * Returns the string representation of this instance.	 * @return the string representation of this instance	 */	public function toString() : String 	{		return PixlibStringifier.stringify( this );	}}