/* * Copyright the original author or authors. *  * Licensed under the MOZILLA PUBLIC LICENSE, Version 1.1 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at *  *      http://www.mozilla.org/MPL/MPL-1.1.html *  * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ /** * @author Francis Bourre * @version 1.0 */class com.bourre.ioc.parser.ContextAttributeList{	private function ContextAttributeList() 	{		//	}			private static var ID : String = "id";	private static var TYPE : String = "type";	private static var NAME : String = "name";	private static var REF : String = "ref";	private static var VALUE : String = "value";	private static var FACTORY : String = "factory";	private static var URL : String = "url";	private static var DEPTH : String = "depth";	private static var VISIBLE : String = "visible";	private static var SINGLETON_ACCESS : String = "singleton-access";	private static var METHOD : String = "method";	private static var PROGRESS_CALLBACK : String = "progress-callback";	private static var NAME_CALLBACK : String = "name-callback";	private static var TIMEOUT_CALLBACK : String = "timeout-callback";		private static var BUILT_CALLBACK : String = "built-callback";		private static var INIT_CALLBACK : String = "init-callback";		private static var CHANNEL : String = "channel";	private static var DELAY : String = "delay";		public static function getID( nodeAttribute ) : String	{		return nodeAttribute[ ContextAttributeList.ID ];	}		public static function getType( nodeAttribute ) : String	{		return nodeAttribute[ ContextAttributeList.TYPE ];	}		public static function getName( nodeAttribute ) : String	{		return nodeAttribute[ ContextAttributeList.NAME ];	}		public static function getRef( nodeAttribute ) : String	{		return nodeAttribute[ ContextAttributeList.REF ];	}		public static function getValue( nodeAttribute ) : String	{		return nodeAttribute[ ContextAttributeList.VALUE ];	}		public static function getFactoryMethod( nodeAttribute ) : String	{		return nodeAttribute[ ContextAttributeList.FACTORY ];	}		public static function getURL( nodeAttribute ) : String	{		return nodeAttribute[ ContextAttributeList.URL ];	}		public static function getDepth( nodeAttribute ) : String	{		return nodeAttribute[ ContextAttributeList.DEPTH ];	}		public static function getVisible( nodeAttribute ) : String	{		return nodeAttribute[ ContextAttributeList.VISIBLE ];	}		public static function getSingletonAccess( nodeAttribute ) : String	{		return nodeAttribute[ ContextAttributeList.SINGLETON_ACCESS ];	}		public static function getMethod( nodeAttribute ) : String	{		return nodeAttribute[ ContextAttributeList.METHOD ];	}		public static function getProgressCallback( nodeAttribute ) : String	{		return nodeAttribute[ ContextAttributeList.PROGRESS_CALLBACK ];	}		public static function getNameCallback( nodeAttribute ) : String	{		return nodeAttribute[ ContextAttributeList.NAME_CALLBACK ];	}		public static function getTimeoutCallback( nodeAttribute ) : String	{		return nodeAttribute[ ContextAttributeList.TIMEOUT_CALLBACK ];	}		public static function getBuiltCallback( nodeAttribute ) : String	{		return nodeAttribute[ ContextAttributeList.BUILT_CALLBACK ];	}		public static function getInitCallback( nodeAttribute ) : String	{		return nodeAttribute[ ContextAttributeList.INIT_CALLBACK ];	}		public static function getChannel( nodeAttribute ) : String	{		return nodeAttribute[ ContextAttributeList.CHANNEL ];	}		public static function getDelay( nodeAttribute ) : String	{		return nodeAttribute[ ContextAttributeList.DELAY ];	}}