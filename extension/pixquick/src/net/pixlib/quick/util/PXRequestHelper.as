/* * Copyright the original author or authors. *  * Licensed under the MOZILLA PUBLIC LICENSE, Version 1.1 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at *  *      http://www.mozilla.org/MPL/MPL-1.1.html *  * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package net.pixlib.quick.util{	import net.pixlib.load.PXLoaderContext;	import net.pixlib.quick.PXQuick;	import flash.net.URLRequest;	import flash.system.LoaderContext;	/**	 * Helper class to build URLRequest and LoaderContext instances pair 	 * quickly.	 * 	 * @example	 * <listing>	 * 	 * var helper : PXRequestHelper = PXRequestHelper.create("http://...");	 * 	 * var loader : PXLoader = new PXGraphicLoader(); 	 * loader.addEventListener(PXLoaderEvent.onLoadInitEVENT, onLoadInitHandler);	 * loader.load(helper.request, helper.context);	 * </listing>	 * 	 * @langversion 3.0	 * @playerversion Flash 10	 * 	 * @author Romain Ecarnot	 */	final public class PXRequestHelper	{		// --------------------------------------------------------------------		// Private properties		// --------------------------------------------------------------------		/**		 * @private		 * Store URLRequests instance		 */		private var _request : URLRequest;		/**		 * @private		 * Stores Loader anticache		 */		private var _anticache : Boolean;		/**		 * @private		 * Stores LoaderContext instance		 */		private var _context : LoaderContext;		// --------------------------------------------------------------------		// Public properties		// --------------------------------------------------------------------		/**		 * Returns URLRequest property.		 * 		 * @return URLRequest property.		 * 		 * @langversion 3.0		 * @playerversion Flash 10		 */		public function get url() : URLRequest		{			return _request;		}		/**		 * Returns Loader anticache value.		 * 		 * @return Loader anticache value.		 * 		 * @langversion 3.0		 * @playerversion Flash 10		 */		public function get anticache() : Boolean		{			return _anticache;		}		/**		 * Returns LoaderContext property.		 * 		 * @return LoaderContext property.		 * 		 * @langversion 3.0		 * @playerversion Flash 10		 */		public function get context() : LoaderContext		{			return _context;		}		// --------------------------------------------------------------------		// Public API		// --------------------------------------------------------------------		/**		 * Creates and returns new PXRequestHelper instance using passed-in 		 * parameters.		 * 		 * @param url		URL to load.		 * @param context	(optional) Loading context to use. If not defined, 		 * 					use the PXQuick.getLoaderContext() context.		 * 		 * @langversion 3.0		 * @playerversion Flash 10		 */		public static function create(url : String, context : LoaderContext = null, anticache : Boolean = false) : PXRequestHelper		{			var wreq : PXRequestHelper = new PXRequestHelper();			wreq._request = new URLRequest(url);			wreq._anticache = anticache;			wreq._context = context != null ? context : PXLoaderContext.getInstance();			return wreq;		}		/**		 * Creates and returns new PXRequestHelper instance using passed-in 		 * parameters.		 * 		 * <p>Uses this method when you define differents url value in 		 * XML configuration file.<br />		 * Each node which define url must have an 'id' attribute.</p>		 * 		 * @param id		XML node attribute identifier.		 * @param anticache	(optional) Anticache value to use. If not defined,		 *  				set to false.		 * @param context	(optional) Loading context to use. If not defined, 		 * 					use the PXQuick.getLoaderContext() context.		 * 							 * @example		 * <listing>		 * 		 * &lt;configuration&gt;		 * 	&lt;node id="portfolio" url="http://blog.customactions.net/portfolio" /&gt;		 * &lt;/configuration&gt;		 * </listing>		 * 		 * @param id				node attribute 'id' to retreive		 * @param anticache			(optional) Specifies whether use anticache or not 		 * @param checkPolicyFile	(optional) Specifies whether a check should 		 * 							be made for the existence of a URL policy 		 * 		 * @langversion 3.0		 * @playerversion Flash 10		 */		public static function fromConfiguration(id : String, context : LoaderContext = null, anticache : Boolean = false) : PXRequestHelper		{			var url : String = PXQuick.configuration..*.(hasOwnProperty("@id") && @id == id).@url;			return create(url, context != null ? context : PXLoaderContext.getInstance(), anticache);		}		// --------------------------------------------------------------------		// Private methods		// --------------------------------------------------------------------		/**		 * @private		 */		function PXRequestHelper()		{		}	}}